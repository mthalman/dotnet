<Project>
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />

  <PropertyGroup>
    <!-- Fake, to satisfy the SDK. -->
    <TargetFramework>netstandard2.0</TargetFramework>
    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>

    <ScenarioTestsArtifactsDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsDir)', 'scenario-tests'))</ScenarioTestsArtifactsDir>
    <ScenarioTestsResultsDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsTestResultsDir)', 'scenario-tests'))</ScenarioTestsResultsDir>
  </PropertyGroup>

  <UsingTask TaskName="Microsoft.DotNet.UnifiedBuild.Tasks.AddSourceToNuGetConfig" AssemblyFile="$(MicrosoftDotNetUnifiedBuildTasksAssembly)" />

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

  <Target Name="Build">
    <PropertyGroup>
      <BuildModeInfoText Condition="'$(DotNetBuildSourceOnly)' == 'true'">source-build</BuildModeInfoText>
      <BuildModeInfoText Condition="'$(DotNetBuildSourceOnly)' != 'true'">non-source-build</BuildModeInfoText>
    </PropertyGroup>

    <Message Text="Build Mode: $(BuildModeInfoText)" Importance="high" />
    <Message Text="Build Environment: $(TargetArchitecture) $(Configuration) $(TargetOS) $(TargetRid)" Importance="high" />

    <MSBuild Projects="$(ToolsDir)init-build.proj;
                       $(RepoProjectsDir)$(RootRepo).proj"
             Targets="Build"
             BuildInParallel="false"
             StopOnFirstFailure="true" />
  </Target>

  <!-- Create a merge manifest from the individual repository manifest files. -->
  <UsingTask TaskName="Microsoft.DotNet.UnifiedBuild.Tasks.MergeAssetManifests" AssemblyFile="$(MicrosoftDotNetUnifiedBuildTasksAssembly)" />
  <Target Name="MergeAssetManifests" AfterTargets="Build">
    <PropertyGroup>      
      <MergedAssetManifestOutputPath>$(ArtifactsDir)VerticalManifest.xml</MergedAssetManifestOutputPath>
    </PropertyGroup>

    <ItemGroup>
      <RepoAssetManifest Include="$(AssetManifestsIntermediateDir)\**\*.xml" />
    </ItemGroup>

    <!-- It's OK for the VmrBuildNumber to be empty -->
    <Microsoft.DotNet.UnifiedBuild.Tasks.MergeAssetManifests 
      AssetManifest="@(RepoAssetManifest)" 
      MergedAssetManifestOutputPath="$(MergedAssetManifestOutputPath)"
      VmrBuildNumber="$(BUILD_BUILDNUMBER)" />
  </Target>

  <PropertyGroup>
    <_ScenarioTestsNuGetConfig>$(ScenarioTestsArtifactsDir)NuGet.config</_ScenarioTestsNuGetConfig>
    <_InstallerNuGetConfig>$(RepoRoot)src/installer/NuGet.config</_InstallerNuGetConfig>
  </PropertyGroup>

  <Target Name="SetupNuGetConfig"
          Inputs="$(_InstallerNuGetConfig)"
          Outputs="$(_ScenarioTestsNuGetConfig)">

    <Copy SourceFiles="$(_InstallerNuGetConfig)"
          DestinationFiles="$(_ScenarioTestsNuGetConfig)" />

  </Target>

  <PropertyGroup>
    <RunTestsTargets>$(RunTestsTargets);RunScenarioTests</RunTestsTargets>
  </PropertyGroup>

  <Target Name="Test" DependsOnTargets="SetupNuGetConfig;GetDotNetSdkArchive;$(RunTestsTargets)" />

  <Target Name="RunScenarioTests"
          DependsOnTargets="DetermineSourceBuiltSdkVersion">
    <Message Text="Running scenario tests: $(TargetArchitecture) $(Configuration) $(TargetOS) $(TargetRid)" Importance="high" />
    <PropertyGroup>
      <_CurrentDateTime>$([System.DateTime]::Now.ToString("yyyy-MM-dd_HH_mm_ss"))</_CurrentDateTime>
      <_TestXmlOutputPath>$(ScenarioTestsResultsDir)$(_CurrentDateTime).xml</_TestXmlOutputPath>
      <_ScenarioTestsAdditionalArgs>--xml $(_TestXmlOutputPath) --target-rid $(TargetRid) --no-cleanup --no-traits Category=MultiTFM</_ScenarioTestsAdditionalArgs>

      <!-- Define the test root as a sub-directory of the scenario test artifacts directory. It needs to be a sub-directory because the scenario test execution
           will clean that directory. Since we need the NuGet.config file that we copied in to be preserved, that's stored in the directory above the test root. -->
      <_TestRoot>$(ScenarioTestsArtifactsDir)artifacts/</_TestRoot>
    </PropertyGroup>

    <MakeDir Directories="$(ScenarioTestsResultsDir)" />

    <Message Text="NETCoreSdkVersion=$(NETCoreSdkVersion)" Importance="high" />

    <Exec Command="$(RepoRoot)src/scenario-tests/build$(ShellExtension) /bl --configuration $(Configuration) --test /p:TestRoot=$(_TestRoot) /p:DotNetRoot=$(DotNetSdkExtractDir) /p:NETCoreSdkVersion=$(SourceBuiltSdkVersion)"
          EnvironmentVariables="AdditionalTestArgs=$(_ScenarioTestsAdditionalArgs);DOTNET_INSTALL_DIR=$(DotNetRoot)"/>
  </Target>

  <Import Project="$(RepositoryEngineeringDir)build.sourcebuild.targets" Condition="'$(DotNetBuildSourceOnly)' == 'true'" />

  <!-- Intentionally below the import to appear at the end. -->
  <Target Name="LogBuildOutputFolders"
          AfterTargets="Build">
   <Message Importance="high" Text="Shipping packages are located in '$(ArtifactsShippingPackagesDir)'." />
   <Message Importance="high" Text="Shipping assets are located in '$(ArtifactsAssetsDir)'." />
  </Target>

</Project>
