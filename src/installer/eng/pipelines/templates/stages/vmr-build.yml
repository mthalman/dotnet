### This stage builds https://github.com/dotnet/dotnet with varying parameters
### If run in a PR, new changes are applied to a local copy of the VMR, then it is built and tested

parameters:
# Branch of the VMR to use (to push to for internal builds)
- name: vmrBranch
  type: string
  default: $(Build.SourceBranch)

# Scope of jobs which are executed
- name: scope
  type: string
  values:
  # run 1 leg for smoke tests
  - ultralite
  # run several legs e.g. win/linux/mac for basic testing
  - lite
  # run everything
  - full

# True when build is running from dotnet/dotnet directly
- name: isBuiltFromVmr
  type: boolean
  default: false

# True when building the VMR in source-only mode
- name: isSourceOnlyBuild
  type: boolean
  default: false

#### SOURCE-ONLY BUILD ####
stages:
- ${{ if parameters.isSourceOnlyBuild }}:
  - stage: VMR_SourceOnly_Build
    displayName: VMR Source-Only Build
    dependsOn: []
    variables:
    - template: ../variables/vmr-stage.yml
      parameters:
        vmrBranch: ${{ parameters.vmrBranch }}
    jobs:

    ### Jobs for ultralite builds ###
    - template: ../jobs/vmr-build.yml
      parameters:
        # Changing the build name requires updating the referenced name in the source-build-sdk-diff-tests.yml pipeline
        buildName: CentOSStream8_Online_MsftSdk
        isBuiltFromVmr: ${{ parameters.isBuiltFromVmr }}
        vmrBranch: ${{ variables.VmrBranch }}
        architecture: x64
        pool:
          name: ${{ variables.defaultPoolName }}
          demands: ${{ variables.defaultPoolDemandsLinux }}
        container: ${{ variables.centOSStream8Container }}
        buildFromArchive: false            # ðŸš«
        buildSourceOnly: true              # âœ…
        enablePoison: false                # ðŸš«
        excludeOmniSharpTests: true        # âœ…
        runOnline: true                    # âœ…
        runTests: true                     # âœ…
        useMonoRuntime: false              # ðŸš«
        withPreviousSDK: false             # ðŸš«
